{"version":3,"sources":["user.model.js"],"names":["mongoose","require","bcrypt","userSchema","Schema","username","type","String","required","unique","maxlength","trim","password","minlength","firstName","lastName","pre","next","genSalt","salt","hash","this","console","log","_context","t0","User","model"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACnBC,OAASD,QAAQ,UAEjBE,WAAa,IAAIH,SAASI,OAAO,CAFvCC,SAAY,CAIRC,KAAMC,OAFJJ,UAAU,EACdE,QAAU,EACRC,UAAMC,EACNC,UAAU,GACVC,MAAM,GAENC,SAAAA,CACAC,KAAMJ,OAP6BC,UAAA,EASrCI,UAAU,GAERJ,UAAQ,CACRK,KAAAA,OAZmCL,UAAA,EAcrCM,UAAW,GAETN,SAAQ,CACRK,KAAAA,OAjBmCL,UAAA,EAmBrCO,UAAU,GAERP,MAAAA,CACAK,KAAAA,QAtBmCL,UAAA,KAwB9BL,WAAAa,IAxBT,OA8BAb,SACEc,GADFd,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAEED,OAAAgB,QAAA,KAFFf,KAAAA,EAAAA,OAEEgB,EAFFhB,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAEED,OAAAkB,KAAAC,KAAAT,SAAAO,IAFFhB,KAAAA,EAEEkB,KAAAT,SAFFT,EAAAA,KAEEc,IAFFd,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAEEmB,QAAAC,IAAAC,EAAAC,IAAAR,EAAAO,EAAAC,IAFFtB,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,OAEE,CAEUgB,YAFV,IAAA,IAAAO,KAAA1B,SAAA2B,MAAA,OAAAxB,YAIIc,OAAAA,QAAIS","file":"user.model.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\nconst bcrypt = require(\"bcrypt\");\n\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    minlength: 3,\n    maxlength: 20,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  firstName: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  lastName: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  admin: {\n    type: Boolean,\n    required: true,\n  },\n});\n\nuserSchema.pre(\n  \"save\",\n  async function (next) {\n    try {\n      const salt = await bcrypt.genSalt(10);\n      this.password = await bcrypt.hash(this.password, salt);\n      next();\n    } catch (error) {\n      console.log(error);\n      next(error);\n    }\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst User = mongoose.model(\"User\", userSchema);\n\nmodule.exports = User;\n"]}
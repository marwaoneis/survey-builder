{"version":3,"sources":["user.model.js"],"names":["mongoose","require","bcrypt","userSchema","Schema","username","type","String","required","unique","minlength","maxlength","trim","password","firstName","lastName","admin","Boolean","pre","next","genSalt","salt","hash","console","log","timestamps","User","model","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAME,UAAU,GAAG,IAAIH,QAAQ,CAACI,MAAb,CAAoB;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,MAAM,EAAE,IAHA;AAIRC,IAAAA,SAAS,EAAE,CAJH;AAKRC,IAAAA,SAAS,EAAE,EALH;AAMRC,IAAAA,IAAI,EAAE;AANE,GAD2B;AASrCC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRE,IAAAA,SAAS,EAAE;AAHH,GAT2B;AAcrCI,EAAAA,SAAS,EAAE;AACTR,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,QAAQ,EAAE,IAFD;AAGTE,IAAAA,SAAS,EAAE;AAHF,GAd0B;AAmBrCK,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRE,IAAAA,SAAS,EAAE;AAHH,GAnB2B;AAwBrCM,EAAAA,KAAK,EAAE;AACLV,IAAAA,IAAI,EAAEW,OADD;AAEL,eAAS;AAFJ;AAxB8B,CAApB,CAAnB;AA8BAd,UAAU,CAACe,GAAX,CACE,MADF,EAEE,iBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEuBjB,MAAM,CAACkB,OAAP,CAAe,EAAf,CAFvB;;AAAA;AAEUC,UAAAA,IAFV;AAAA;AAAA,0CAG0BnB,MAAM,CAACoB,IAAP,CAAY,KAAKT,QAAjB,EAA2BQ,IAA3B,CAH1B;;AAAA;AAGI,eAAKR,QAHT;AAIIM,UAAAA,IAAI;AAJR;AAAA;;AAAA;AAAA;AAAA;AAMII,UAAAA,OAAO,CAACC,GAAR;AACAL,UAAAA,IAAI,aAAJ;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFF,EAYE;AACEM,EAAAA,UAAU,EAAE;AADd,CAZF;AAiBA,IAAMC,IAAI,GAAG1B,QAAQ,CAAC2B,KAAT,CAAe,MAAf,EAAuBxB,UAAvB,CAAb;AAEAyB,MAAM,CAACC,OAAP,GAAiBH,IAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\nconst bcrypt = require(\"bcrypt\");\n\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    minlength: 3,\n    maxlength: 20,\n    trim: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  firstName: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  lastName: {\n    type: String,\n    required: true,\n    minlength: 6,\n  },\n  admin: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nuserSchema.pre(\n  \"save\",\n  async function (next) {\n    try {\n      const salt = await bcrypt.genSalt(10);\n      this.password = await bcrypt.hash(this.password, salt);\n      next();\n    } catch (error) {\n      console.log(error);\n      next(error);\n    }\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst User = mongoose.model(\"User\", userSchema);\n\nmodule.exports = User;\n"],"file":"user.model.dev.js"}